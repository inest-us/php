<?php
class Collection implements Iterator {

  protected $_members = array();   //collection members in a linear array
  protected $_keys = array();      //names of keys in numeric order to match 
                                   //linear array
  protected $position = 0;         //current position

  public function __construct() {
        $this->position = 0;
        $this->_members = array();
        $this->_keys = array();
  }

  public function rewind() {
        $this->position = 0;
  }

  public function current() {
        return($this->_members[$this->position]);
  }

  public function addItem($obj, $key = NULL) {
      $this->_members[] = $obj;
      if (!$key) {
                $key = sizeof($this->_members) - 1;
      };
      $this->_keys[] = $key;
      $this->position = sizeof($this->_members);
  }

  public function key() {
        return($this->_keys[$this->position]);
  }

  public function next() {
        ++$this->position;
  }
  
  public function valid() {
        return(isset($this->_members[$this->position]));
  }
  
  public function length() {
    return sizeof($this->_members);
  }
   
  public function exists($key) {
    // resolve key to index 
    $idx = -1;
    for ($i=0; $i<=sizeof($this->_keys)-1; $i++) {
        if ($this->_keys[$i] = $key) {
                $idx = $i;   
        };
    }
    if ($idx == -1) {
        return(false);
    };
    return (isset($this->_members[$i]));
  }
        
}
      
?>